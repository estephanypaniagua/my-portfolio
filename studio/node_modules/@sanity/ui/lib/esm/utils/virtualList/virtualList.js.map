{
  "version": 3,
  "sources": ["../../../../src/utils/virtualList/virtualList.tsx"],
  "sourcesContent": ["import React, {forwardRef, useEffect, useMemo, useRef, useState} from 'react'\nimport styled from 'styled-components'\nimport {_isScrollable} from '../../helpers'\nimport {useForwardedRef} from '../../hooks'\nimport {StackProps} from '../../primitives'\nimport {useTheme} from '../../theme'\n\n/**\n * @beta\n */\nexport interface VirtualListChangeOpts {\n  fromIndex: number\n  gap: number\n  itemHeight: number\n  scrollHeight: number\n  scrollTop: number\n  toIndex: number\n}\n\n/**\n * @beta\n */\nexport interface VirtualListProps<Item = any> {\n  as?: React.ElementType | keyof JSX.IntrinsicElements\n  gap?: number\n  getItemKey?: (item: Item, itemIndex: number) => string\n  items?: Item[]\n  onChange?: (opts: VirtualListChangeOpts) => void\n  renderItem?: (item: Item) => React.ReactNode\n}\n\nconst Root = styled.div`\n  position: relative;\n`\n\nconst ItemWrapper = styled.div`\n  position: absolute;\n  left: 0;\n  right: 0;\n`\n\n/**\n * @beta\n */\nexport const VirtualList = forwardRef(function VirtualList(\n  props: VirtualListProps &\n    StackProps &\n    Omit<React.HTMLProps<HTMLDivElement>, 'as' | 'children' | 'onChange' | 'ref'>,\n  ref: React.ForwardedRef<HTMLDivElement>\n): React.ReactElement {\n  const {as = 'div', gap = 0, getItemKey, items = [], onChange, renderItem, ...restProps} = props\n  const {space} = useTheme().sanity\n  const forwardedRef = useForwardedRef(ref)\n  const wrapperRef = useRef<HTMLDivElement | null>(null)\n  const [scrollTop, setScrollTop] = useState(0)\n  const [scrollHeight, setScrollHeight] = useState(0)\n  const [itemHeight, setItemHeight] = useState(-1)\n\n  useEffect(() => {\n    if (!wrapperRef.current) return\n\n    const firstElement = wrapperRef.current.firstChild\n\n    if (firstElement instanceof HTMLElement) {\n      setItemHeight(firstElement.offsetHeight)\n    }\n  }, [renderItem])\n\n  useEffect(() => {\n    if (!forwardedRef.current) return\n\n    let _scrollEl = forwardedRef.current.parentNode\n\n    while (_scrollEl && !_isScrollable(_scrollEl)) {\n      _scrollEl = _scrollEl.parentNode\n    }\n\n    if (_scrollEl) {\n      const scrollEl = _scrollEl\n\n      if (!(scrollEl instanceof HTMLElement)) return\n\n      const handleScroll = () => {\n        setScrollTop(scrollEl.scrollTop)\n      }\n\n      scrollEl.addEventListener('scroll', handleScroll, {passive: true})\n\n      const ro = new ResizeObserver((entries) => {\n        setScrollHeight(entries[0].contentRect.height)\n      })\n\n      ro.observe(scrollEl)\n\n      handleScroll()\n\n      return () => {\n        scrollEl.removeEventListener('scroll', handleScroll)\n        ro.unobserve(scrollEl)\n        ro.disconnect()\n      }\n    }\n\n    const handleScroll = () => {\n      setScrollTop(window.scrollY)\n    }\n\n    const handleResize = () => {\n      setScrollHeight(window.innerHeight)\n    }\n\n    window.addEventListener('scroll', handleScroll, {passive: true})\n    window.addEventListener('resize', handleResize)\n\n    setScrollHeight(window.innerHeight)\n\n    handleScroll()\n\n    return () => {\n      window.removeEventListener('scroll', handleScroll)\n      window.removeEventListener('resize', handleResize)\n    }\n  }, [forwardedRef])\n\n  const len = items.length\n  const height = itemHeight ? len * (itemHeight + space[gap]) - space[gap] : 0\n  const fromIndex = height ? Math.max(Math.floor((scrollTop / height) * len) - 2, 0) : 0\n  const toIndex = height ? Math.ceil(((scrollTop + scrollHeight) / height) * len) + 1 : 0\n\n  useEffect(() => {\n    if (!onChange) return\n    onChange({fromIndex, gap: space[gap], itemHeight, scrollHeight, scrollTop, toIndex})\n  }, [fromIndex, gap, itemHeight, onChange, scrollHeight, scrollTop, space, toIndex])\n\n  const children = useMemo(() => {\n    if (!renderItem || items.length === 0) return null\n\n    if (itemHeight === -1) {\n      return [<ItemWrapper key={0}>{renderItem(items[0])}</ItemWrapper>]\n    }\n\n    return items.slice(fromIndex, toIndex).map((item, _itemIndex) => {\n      const itemIndex = fromIndex + _itemIndex\n      const node = renderItem(item)\n      const key = getItemKey ? getItemKey(item, itemIndex) : itemIndex\n\n      return (\n        <ItemWrapper key={key} style={{top: itemIndex * (itemHeight + space[gap])}}>\n          {node}\n        </ItemWrapper>\n      )\n    })\n  }, [fromIndex, gap, getItemKey, itemHeight, items, renderItem, space, toIndex])\n\n  const wrapperStyle = useMemo(() => ({height}), [height])\n\n  return (\n    <Root as={as} data-ui=\"VirtualList\" {...restProps} ref={forwardedRef}>\n      <div ref={wrapperRef} style={wrapperStyle}>\n        {children}\n      </div>\n    </Root>\n  )\n})\n"],
  "mappings": "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",
  "names": []
}
