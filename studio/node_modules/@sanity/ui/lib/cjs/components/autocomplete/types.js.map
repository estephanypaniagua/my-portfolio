{
  "version": 3,
  "sources": ["../../../../src/components/autocomplete/types.ts"],
  "sourcesContent": ["import {ButtonProps} from '../../primitives'\n\n/**\n * @public\n */\nexport type AutocompleteOpenButtonProps = Omit<ButtonProps, 'as'> &\n  Omit<React.HTMLProps<HTMLButtonElement>, 'as' | 'ref'>\n\n/**\n * @public\n */\nexport interface BaseAutocompleteOption {\n  value: string\n}\n\n/**\n * @internal\n */\nexport interface AutocompleteState {\n  activeValue: string | null\n  focused: boolean\n  listFocused: boolean\n  query: string | null\n  value: string | null\n}\n\n/**\n * @internal\n */\nexport interface AutocompleteRootBlurMsg {\n  type: 'root/blur'\n}\n\n/**\n * @internal\n */\nexport interface AutocompleteRootClearMsg {\n  type: 'root/clear'\n}\n\n/**\n * @internal\n */\nexport interface AutocompleteRootEscapeMsg {\n  type: 'root/escape'\n}\n\n/**\n * @internal\n */\nexport interface AutocompleteRootOpenMsg {\n  type: 'root/open'\n  query: string | null\n}\n\n/**\n * @internal\n */\nexport interface AutocompleteRootSetActiveValueMsg {\n  type: 'root/setActiveValue'\n  value: string\n  listFocused?: boolean\n}\n\n/**\n * @internal\n */\nexport interface AutocompleteRootSetListFocusedMsg {\n  type: 'root/setListFocused'\n  listFocused: boolean\n}\n\n/**\n * @internal\n */\nexport interface AutocompleteInputChangeMsg {\n  type: 'input/change'\n  query: string | null\n}\n\n/**\n * @internal\n */\nexport interface AutocompleteInputFoocusMsg {\n  type: 'input/focus'\n}\n\n/**\n * @internal\n */\nexport interface AutocompleteValueChangeMsg {\n  type: 'value/change'\n  value: string | null\n}\n\n/**\n * @internal\n */\nexport type AutocompleteMsg =\n  | AutocompleteRootBlurMsg\n  | AutocompleteRootClearMsg\n  | AutocompleteRootEscapeMsg\n  | AutocompleteRootOpenMsg\n  | AutocompleteRootSetActiveValueMsg\n  | AutocompleteRootSetListFocusedMsg\n  | AutocompleteInputChangeMsg\n  | AutocompleteInputFoocusMsg\n  | AutocompleteValueChangeMsg\n"],
  "mappings": ";;AAAA;",
  "names": []
}
