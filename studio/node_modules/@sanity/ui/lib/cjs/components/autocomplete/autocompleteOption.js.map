{
  "version": 3,
  "sources": ["../../../../src/components/autocomplete/autocompleteOption.tsx"],
  "sourcesContent": ["import React, {useCallback} from 'react'\nimport {_isEnterToClickElement} from '../../helpers'\n\nexport interface AutocompleteOptionProps {\n  children: React.ReactNode\n  id: string\n  onSelect: (v: string) => void\n  selected: boolean\n  value: string\n}\n\nexport function AutocompleteOption(props: AutocompleteOptionProps): React.ReactElement {\n  const {children, id, onSelect, selected, value} = props\n\n  const handleClick = useCallback(() => {\n    // Calling the `onSelect` in a timeout is a fix to\n    // allow the `click` event to propagate in some cases\n    setTimeout(() => {\n      onSelect(value)\n    }, 0)\n  }, [onSelect, value])\n\n  const handleKeyDown = useCallback(\n    (event: React.KeyboardEvent<HTMLLIElement>) => {\n      if (event.key === 'Enter' && !_isEnterToClickElement(event.currentTarget)) {\n        handleClick()\n      }\n    },\n    [handleClick]\n  )\n\n  return (\n    <li\n      aria-selected={selected}\n      data-ui=\"AutocompleteOption\"\n      id={id}\n      role=\"option\"\n      onClick={handleClick}\n      onKeyDown={handleKeyDown}\n    >\n      {children}\n    </li>\n  )\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,mBAAiC;AACjC,qBAAqC;AAU9B,4BAA4B,OAAoD;AACrF,QAAM,EAAC,UAAU,IAAI,UAAU,UAAU,UAAS;AAElD,QAAM,cAAc,8BAAY,MAAM;AAGpC,eAAW,MAAM;AACf,eAAS;AAAA,OACR;AAAA,KACF,CAAC,UAAU;AAEd,QAAM,gBAAgB,8BACpB,CAAC,UAA8C;AAC7C,QAAI,MAAM,QAAQ,WAAW,CAAC,2CAAuB,MAAM,gBAAgB;AACzE;AAAA;AAAA,KAGJ,CAAC;AAGH,SACE,mDAAC,MAAD;AAAA,IACE,iBAAe;AAAA,IACf,WAAQ;AAAA,IACR;AAAA,IACA,MAAK;AAAA,IACL,SAAS;AAAA,IACT,WAAW;AAAA,KAEV;AAAA;",
  "names": []
}
