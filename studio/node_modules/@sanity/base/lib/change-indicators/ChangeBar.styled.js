"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TooltipTriggerWrapper = exports.ShapeWrapper = exports.FieldWrapper = exports.EditIconWrapper = exports.ChangeBarWrapper = exports.ButtonWrapper = exports.BarWrapper = exports.BadgeWrapper = void 0;

var _react = _interopRequireDefault(require("react"));

var _styledComponents = _interopRequireWildcard(require("styled-components"));

var _icons = require("@sanity/icons");

var _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7, _templateObject8, _templateObject9, _templateObject10, _templateObject11, _templateObject12, _templateObject13, _templateObject14;

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

var Shape = props => {
  return /*#__PURE__*/_react.default.createElement("svg", _extends({}, props, {
    viewBox: "0 0 20 27",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }), /*#__PURE__*/_react.default.createElement("path", {
    d: "M9 0.448608C9 2.49663 7.38382 4.13678 5.57253 5.09261C2.55605 6.68443 0.5 9.8521 0.5 13.5C0.5 17.1479 2.55605 20.3155 5.57253 21.9074C7.38382 22.8632 9 24.5033 9 26.5514V27H11V26.5514C11 24.5033 12.6162 22.8632 14.4275 21.9074C17.4439 20.3155 19.5 17.1479 19.5 13.5C19.5 9.8521 17.4439 6.68443 14.4275 5.09261C12.6162 4.13678 11 2.49663 11 0.448608V0H9V0.448608Z",
    fill: "currentColor"
  }));
};

var animationSpeed = 150;

var TooltipTriggerWrapper = _styledComponents.default.div(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n  position: relative;\n  opacity: 1;\n  transition: opacity 100ms;\n"])));

exports.TooltipTriggerWrapper = TooltipTriggerWrapper;

var BarWrapper = _styledComponents.default.div(_ref => {
  var theme = _ref.theme;

  /* these colours aren't freely available on the current theme */
  var notSelectedColor = theme.sanity.color.spot.yellow;
  var screenMedium = theme.sanity.media[0];
  return (0, _styledComponents.css)(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["\n    position: absolute;\n    top: 0;\n    left: -1px;\n    width: 2px;\n    bottom: 0;\n    background-color: ", ";\n    border-bottom-right-radius: 2px;\n    border-top-right-radius: 2px;\n\n    @media (min-width: ", "px) {\n      display: unset;\n    }\n  "])), notSelectedColor, screenMedium);
});

exports.BarWrapper = BarWrapper;

var BadgeWrapper = _styledComponents.default.div(_ref2 => {
  var theme = _ref2.theme;
  var maxScreenMedium = theme.sanity.media[0] - 1;
  return (0, _styledComponents.css)(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral(["\n    position: absolute;\n    top: 50%;\n    left: -9px;\n    width: 19px;\n    height: 19px;\n    border-radius: 9.5px;\n    transform: translate3d(-0.5px, -10px, 0) scale(0, 1);\n\n    transition: transform ", "ms, opacity ", "ms;\n\n    @media (max-width: ", "px) {\n      /* hide on mobile */\n      display: none;\n    }\n  "])), animationSpeed, animationSpeed, maxScreenMedium);
});

exports.BadgeWrapper = BadgeWrapper;
var EditIconWrapper = (0, _styledComponents.default)(_icons.EditIcon)(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral(["\n  display: block;\n  position: relative;\n  margin: 0;\n  font-size: calc(19 / 16 * 1rem);\n  color: var(--card-bg-color);\n  opacity: 0;\n  transition: opacity ", "ms;\n\n  & path {\n    stroke-width: 1.5px;\n  }\n"])), animationSpeed);
exports.EditIconWrapper = EditIconWrapper;
var ShapeWrapper = (0, _styledComponents.default)(Shape)(_ref3 => {
  var theme = _ref3.theme;

  /* these colours aren't freely available on the current theme */
  var notSelectedColor = theme.sanity.color.spot.yellow;
  var maxScreenMedium = theme.sanity.media[0] - 1;
  return (0, _styledComponents.css)(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral(["\n    display: block;\n    position: absolute;\n    width: 20px;\n    height: 27px;\n    transform: translate3d(-0.5px, -4px, 0);\n    color: ", ";\n\n    @media (max-width: ", "px) {\n      /* hide on mobile */\n      display: none;\n    }\n  "])), notSelectedColor, maxScreenMedium);
});
exports.ShapeWrapper = ShapeWrapper;

var ButtonWrapper = _styledComponents.default.button(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral(["\n  appearance: none;\n  border: 0;\n  outline: 0;\n  display: block;\n  padding: 0;\n  background: 0;\n  position: absolute;\n  height: 100%;\n  cursor: pointer;\n  pointer-events: all;\n  left: calc(0 - 0.25rem);\n  width: calc(0.25rem + 1rem);\n\n  &:focus {\n    border: 0;\n    outline: 0;\n  }\n"])));
/* for when the shape and icon need to appear on the page */


exports.ButtonWrapper = ButtonWrapper;
var BadgeOpen = (0, _styledComponents.css)(_templateObject7 || (_templateObject7 = _taggedTemplateLiteral(["\n  ", " {\n    transform: translate3d(-0.5px, -10px, 0) scale(1);\n  }\n\n  ", " {\n    opacity: 1;\n  }\n"])), BadgeWrapper, EditIconWrapper);

var ChangeBarWrapper = _styledComponents.default.div(_ref4 => {
  var focus = _ref4.focus,
      hover = _ref4.hover,
      changed = _ref4.changed,
      disabled = _ref4.disabled,
      isReviewChangeOpen = _ref4.isReviewChangeOpen;
  if (disabled) return (0, _styledComponents.css)(_templateObject8 || (_templateObject8 = _taggedTemplateLiteral(["\n        ", " {\n          display: none;\n        }\n      "])), TooltipTriggerWrapper);
  return (0, _styledComponents.css)(_templateObject9 || (_templateObject9 = _taggedTemplateLiteral(["\n      display: flex;\n      position: relative;\n\n      @media (hover: hover) {\n        &:hover {\n          z-index: 10;\n        }\n      }\n\n      /* on focus */\n\n      ", "\n\n      /* on hover */\n\n      ", "\n\n\n    /* when field changed */\n\n    ", "\n\n      /* when review change is open */\n\n      ", "\n    "])), focus && (0, _styledComponents.css)(_templateObject10 || (_templateObject10 = _taggedTemplateLiteral(["\n        ", " {\n          color: var(--card-focus-ring-color);\n        }\n\n        ", ",\n        ", " {\n          &:focus-within {\n            ", "\n          }\n          background-color: var(--card-focus-ring-color);\n        }\n      "])), ShapeWrapper, BarWrapper, TooltipTriggerWrapper, BadgeOpen), hover && (0, _styledComponents.css)(_templateObject11 || (_templateObject11 = _taggedTemplateLiteral(["\n        ", "\n      "])), BadgeOpen), !changed && (0, _styledComponents.css)(_templateObject12 || (_templateObject12 = _taggedTemplateLiteral(["\n        ", " {\n          opacity: 0;\n          pointer-events: none;\n        }\n      "])), TooltipTriggerWrapper), isReviewChangeOpen && (0, _styledComponents.css)(_templateObject13 || (_templateObject13 = _taggedTemplateLiteral(["\n        ", " {\n          opacity: 0;\n          pointer-events: none;\n        }\n      "])), BadgeWrapper));
});

exports.ChangeBarWrapper = ChangeBarWrapper;

var FieldWrapper = _styledComponents.default.div(_templateObject14 || (_templateObject14 = _taggedTemplateLiteral(["\n  flex-grow: 1;\n  min-width: 0;\n"])));

exports.FieldWrapper = FieldWrapper;