"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CollapseMenu = CollapseMenu;

var _react = _interopRequireWildcard(require("react"));

var _ui = require("@sanity/ui");

var _reactIntersectionObserver = require("react-intersection-observer");

var _icons = require("@sanity/icons");

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _ = require(".");

var _excluded = ["buttonProps", "menuItemProps", "tooltipProps"],
    _excluded2 = ["text", "buttonProps", "menuItemProps", "tooltipProps"],
    _excluded3 = ["icon", "selected", "text", "menuItemProps", "buttonProps", "tooltipProps"];

var _templateObject, _templateObject2, _templateObject3;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

var Root = (0, _styledComponents.default)(_ui.Box)(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n  border-radius: inherit;\n  overflow: hidden;\n  position: relative;\n  white-space: nowrap;\n  width: 100%;\n  padding: 0.25rem;\n  margin: -0.25rem;\n"])));
var Inner = (0, _styledComponents.default)(_ui.Flex)(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  pointer-events: ", ";\n  opacity: ", ";\n  position: ", ";\n  visibility: ", ";\n  width: ", ";\n"])), _ref => {
  var $hide = _ref.$hide;
  return $hide ? 'none' : 'inherit';
}, _ref2 => {
  var $hide = _ref2.$hide;
  return $hide ? 0 : 1;
}, _ref3 => {
  var $hide = _ref3.$hide;
  return $hide ? 'absolute' : 'static';
}, _ref4 => {
  var $hide = _ref4.$hide;
  return $hide ? 'hidden' : 'visible';
}, _ref5 => {
  var $hide = _ref5.$hide;
  return $hide ? 'max-content' : 'auto';
});
var OptionBox = (0, _styledComponents.default)(_ui.Box)(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral(["\n  display: flex;\n  flex-shrink: 0;\n  list-style: none;\n  white-space: nowrap;\n  visibility: ", ";\n  pointer-events: ", ";\n"])), _ref6 => {
  var $inView = _ref6.$inView;
  return $inView ? 'visible' : 'hidden';
}, _ref7 => {
  var $inView = _ref7.$inView;
  return $inView ? 'inherit' : 'none';
});

function CollapseMenu(props) {
  var children = props.children,
      menuButton = props.menuButton,
      _props$gap = props.gap,
      gap = _props$gap === void 0 ? 1 : _props$gap,
      onMenuVisible = props.onMenuVisible,
      menuPopoverProps = props.menuPopoverProps;

  var _useState = (0, _react.useState)(null),
      _useState2 = _slicedToArray(_useState, 2),
      rootRef = _useState2[0],
      setRootRef = _useState2[1];

  var _useState3 = (0, _react.useState)(null),
      _useState4 = _slicedToArray(_useState3, 2),
      expandedRef = _useState4[0],
      setExpandedRef = _useState4[1];

  var _useState5 = (0, _react.useState)(null),
      _useState6 = _slicedToArray(_useState5, 2),
      collapsedInnerRef = _useState6[0],
      setCollapsedInnerRef = _useState6[1];

  var _useState7 = (0, _react.useState)(true),
      _useState8 = _slicedToArray(_useState7, 2),
      collapsed = _useState8[0],
      setCollapsed = _useState8[1];

  var _useState9 = (0, _react.useState)([]),
      _useState10 = _slicedToArray(_useState9, 2),
      menuOptions = _useState10[0],
      setMenuOptions = _useState10[1];

  var rootRect = (0, _ui.useElementRect)(rootRef);
  var childrenArray = (0, _react.useMemo)(() => _react.Children.toArray(children), [children]); //Filter to get the latest state of menu options

  var menuOptionsArray = (0, _react.useMemo)(() => childrenArray.filter(_ref8 => {
    var key = _ref8.key;
    return menuOptions.find(o => o.key === key);
  }), [childrenArray, menuOptions]); // Pick what button to render as menu button

  var menuButtonToRender = (0, _react.useMemo)(() => {
    if (menuButton) {
      return menuButton;
    }

    return /*#__PURE__*/_react.default.createElement(_ui.Button, {
      mode: "bleed",
      icon: _icons.EllipsisVerticalIcon
    });
  }, [menuButton]);
  var menuIsVisible = collapsed && menuOptionsArray.length > 0;
  (0, _react.useEffect)(() => {
    if (onMenuVisible) {
      onMenuVisible(menuIsVisible);
    }
  }, [menuIsVisible, onMenuVisible]); // Add or remove option in menuOptions

  var handleInViewChange = (0, _react.useCallback)(payload => {
    var child = payload.child,
        inView = payload.inView;
    var exists = menuOptions.some(_ref9 => {
      var key = _ref9.key;
      return key === child.key;
    });

    if (!inView && !exists) {
      setMenuOptions(prev => [child, ...prev]);
    }

    if (inView && exists) {
      var updatedOptions = menuOptions.filter(_ref10 => {
        var key = _ref10.key;
        return key !== child.key;
      });
      setMenuOptions(updatedOptions);
    }
  }, [menuOptions]); //Check if child is in menu

  var isInMenu = (0, _react.useCallback)(option => {
    var exists = menuOptions.some(_ref11 => {
      var key = _ref11.key;
      return key === option.key;
    });
    return exists;
  }, [menuOptions]); //Check if menu should collapse

  (0, _react.useEffect)(() => {
    if (rootRect && expandedRef) {
      var collapse = rootRect.width < expandedRef.scrollWidth;
      setCollapsed(collapse);
    }
  }, [expandedRef, rootRect]);
  return /*#__PURE__*/_react.default.createElement(Root, {
    ref: setRootRef,
    display: "flex",
    "data-ui": "CollapseMenu",
    sizing: "border"
  }, /*#__PURE__*/_react.default.createElement(Inner, {
    ref: setExpandedRef,
    $hide: collapsed,
    "aria-hidden": collapsed
  }, /*#__PURE__*/_react.default.createElement(_ui.Flex, {
    as: "ul",
    gap: gap
  }, childrenArray.map(child => {
    var _ref12 = child.props,
        _ref12$buttonProps = _ref12.buttonProps,
        buttonProps = _ref12$buttonProps === void 0 ? {} : _ref12$buttonProps,
        menuItemProps = _ref12.menuItemProps,
        tooltipProps = _ref12.tooltipProps,
        restProps = _objectWithoutProperties(_ref12, _excluded);

    return /*#__PURE__*/_react.default.createElement(_ui.Box, {
      as: "li",
      key: child.key
    }, /*#__PURE__*/(0, _react.cloneElement)(child, _objectSpread({}, _objectSpread(_objectSpread({}, restProps), buttonProps)), null));
  }))), /*#__PURE__*/_react.default.createElement(Inner, {
    gap: gap,
    $hide: !collapsed,
    "aria-hidden": !collapsed
  }, /*#__PURE__*/_react.default.createElement(_ui.Flex, {
    ref: setCollapsedInnerRef,
    gap: gap,
    as: "ul"
  }, childrenArray.map(child => {
    if (child.type === _.CollapseMenuDivider) {
      return child;
    }

    if (child.type !== _.CollapseMenuButton) {
      return child;
    }

    var _ref13 = child.props,
        text = _ref13.text,
        _ref13$buttonProps = _ref13.buttonProps,
        buttonProps = _ref13$buttonProps === void 0 ? {} : _ref13$buttonProps,
        menuItemProps = _ref13.menuItemProps,
        tooltipProps = _ref13.tooltipProps,
        restProps = _objectWithoutProperties(_ref13, _excluded2);

    return /*#__PURE__*/_react.default.createElement(_reactIntersectionObserver.InView // eslint-disable-next-line react/jsx-no-bind
    , {
      onChange: inView => handleInViewChange({
        inView,
        child: child
      }),
      root: collapsedInnerRef,
      key: child.key,
      threshold: 1,
      rootMargin: "0px 2px 0px 0px",
      "aria-hidden": isInMenu(child.key)
    }, _ref14 => {
      var ref = _ref14.ref,
          inView = _ref14.inView;
      return /*#__PURE__*/_react.default.createElement(OptionBox, {
        ref: ref,
        as: "li",
        $inView: inView && collapsed
      }, /*#__PURE__*/_react.default.createElement(_ui.Tooltip, _extends({}, tooltipProps, {
        portal: true,
        disabled: !inView,
        content: /*#__PURE__*/_react.default.createElement(_ui.Box, {
          padding: 2,
          sizing: "border"
        }, /*#__PURE__*/_react.default.createElement(_ui.Text, {
          size: 1
        }, text))
      }), /*#__PURE__*/_react.default.createElement(_ui.Box, null, /*#__PURE__*/(0, _react.cloneElement)(child, _objectSpread(_objectSpread({}, _objectSpread(_objectSpread({}, restProps), buttonProps)), {}, {
        text: null,
        'aria-label': text
      }), null))));
    });
  }))), menuIsVisible && /*#__PURE__*/_react.default.createElement(_ui.MenuButton, {
    button: menuButtonToRender,
    id: "collapse-menu",
    menu: /*#__PURE__*/_react.default.createElement(_ui.Menu, null, menuOptionsArray.map(child => {
      var _ref15 = child.props,
          icon = _ref15.icon,
          selected = _ref15.selected,
          text = _ref15.text,
          _ref15$menuItemProps = _ref15.menuItemProps,
          menuItemProps = _ref15$menuItemProps === void 0 ? {} : _ref15$menuItemProps,
          buttonProps = _ref15.buttonProps,
          tooltipProps = _ref15.tooltipProps,
          restProps = _objectWithoutProperties(_ref15, _excluded3);

      return /*#__PURE__*/_react.default.createElement(_ui.MenuItem, _extends({}, restProps, menuItemProps, {
        icon: icon,
        key: child.key,
        text: text,
        fontSize: 2,
        radius: 2,
        pressed: selected
      }));
    })),
    popover: _objectSpread({
      portal: true,
      placement: 'bottom',
      preventOverflow: true
    }, menuPopoverProps)
  }));
}