"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BlockImagePreview = void 0;

var _react = _interopRequireDefault(require("react"));

var _ui = require("@sanity/ui");

var _useDevicePixelRatio = require("use-device-pixel-ratio");

var _blockImagePreview = require("./blockImagePreview.styled");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var DEFAULT_MEDIA_DIMENSIONS = {
  width: 600,
  height: 600,
  fit: 'fillmax',
  dpr: (0, _useDevicePixelRatio.getDevicePixelRatio)()
}; // @todo This is to make sure there is the correct amount of spacing below the dropdown in `BlockObjectPreview`. Remove when `BlockObjectPreview` is migrated to Sanity UI.

var STYLE_HEADING = {
  marginBottom: '2px'
};

var BlockImagePreview = props => {
  var title = props.title,
      subtitle = props.subtitle,
      description = props.description,
      mediaDimensions = props.mediaDimensions,
      media = props.media,
      children = props.children,
      status = props.status;
  return /*#__PURE__*/_react.default.createElement(_blockImagePreview.Root, null, title && /*#__PURE__*/_react.default.createElement(_ui.Box, {
    as: "header",
    paddingY: 4,
    paddingX: [3, 4],
    marginTop: 1
  }, /*#__PURE__*/_react.default.createElement(_ui.Heading, {
    textOverflow: "ellipsis",
    size: 1,
    style: STYLE_HEADING
  }, title)), /*#__PURE__*/_react.default.createElement(_ui.Flex, {
    justify: "center",
    direction: "column"
  }, media && /*#__PURE__*/_react.default.createElement(_blockImagePreview.MediaWrapper, null, typeof media === 'function' && media({
    dimensions: mediaDimensions || DEFAULT_MEDIA_DIMENSIONS,
    layout: 'block'
  }), typeof media === 'string' && /*#__PURE__*/_react.default.createElement(_ui.Box, null, media), /*#__PURE__*/_react.default.isValidElement(media) && media), subtitle || description || status || /*#__PURE__*/_react.default.createElement(_blockImagePreview.MetadataWrapper, {
    paddingX: 2,
    paddingY: 2
  }, subtitle && /*#__PURE__*/_react.default.createElement(_ui.Text, {
    muted: true,
    size: 1,
    textOverflow: "ellipsis"
  }, subtitle), description && /*#__PURE__*/_react.default.createElement(_ui.Box, {
    marginTop: 2
  }, /*#__PURE__*/_react.default.createElement(_ui.Text, {
    muted: true,
    size: 1,
    textOverflow: "ellipsis"
  }, typeof description === 'function' ? description({
    layout: 'block'
  }) : description)), status && /*#__PURE__*/_react.default.createElement(_ui.Box, {
    marginTop: 2
  }, typeof status === 'function' ? status({
    layout: 'block'
  }) : status))), children && /*#__PURE__*/_react.default.createElement(_ui.Box, null, children));
};

exports.BlockImagePreview = BlockImagePreview;