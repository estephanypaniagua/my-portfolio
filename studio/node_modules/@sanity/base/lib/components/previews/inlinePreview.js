"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.InlinePreview = void 0;

var _react = _interopRequireDefault(require("react"));

var _ui = require("@sanity/ui");

var _useDevicePixelRatio = require("use-device-pixel-ratio");

var _inlinePreview = require("./inlinePreview.styled");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var DEFAULT_MEDIA_DIMENSIONS = {
  width: 32,
  height: 32,
  fit: 'crop',
  aspect: 1,
  dpr: (0, _useDevicePixelRatio.getDevicePixelRatio)()
};

var InlinePreview = props => {
  var title = props.title,
      media = props.media,
      _props$mediaDimension = props.mediaDimensions,
      mediaDimensions = _props$mediaDimension === void 0 ? DEFAULT_MEDIA_DIMENSIONS : _props$mediaDimension,
      children = props.children;

  if (!title && !media) {
    return /*#__PURE__*/_react.default.createElement("span", null);
  }

  return /*#__PURE__*/_react.default.createElement(_inlinePreview.Root, null, media && /*#__PURE__*/_react.default.createElement(_inlinePreview.MediaWrapper, {
    marginRight: 1
  }, typeof media === 'function' && media({
    dimensions: mediaDimensions,
    layout: 'inline'
  }), typeof media !== 'function' && media, /*#__PURE__*/_react.default.isValidElement(media) && media), /*#__PURE__*/_react.default.createElement(_inlinePreview.InheritedText, {
    marginRight: 1
  }, typeof title === 'function' ? title({
    layout: 'inline'
  }) : title), children && /*#__PURE__*/_react.default.createElement(_ui.Box, {
    as: "span"
  }, children));
};

exports.InlinePreview = InlinePreview;