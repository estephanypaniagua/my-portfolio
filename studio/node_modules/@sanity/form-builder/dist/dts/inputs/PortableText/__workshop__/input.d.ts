import React from 'react';
export declare class OtherInput extends React.Component {
    blur(): void;
    focus(): void;
    render(): JSX.Element;
}
export declare const inputResolver: (input: any) => React.ComponentType<{
    focusPath: import("@sanity/types/dist/dts").Path;
    hotkeys?: import("@sanity/portable-text-editor").HotkeyOptions;
    level: number;
    markers: import("@sanity/types/dist/dts").ValidationMarker[];
    onBlur: () => void;
    onChange: (event: import("../../../PatchEvent").default) => void;
    onFocus: (path: any) => void;
    onCopy?: import("@sanity/portable-text-editor").OnCopyFn;
    onPaste?: import("@sanity/portable-text-editor").OnPasteFn;
    readOnly: boolean;
    renderBlockActions?: import("../types").RenderBlockActions;
    renderCustomMarkers?: import("../types").RenderCustomMarkers;
    presence: import("@sanity/base/presence").FormFieldPresence[];
    subscribe: (subscribeFn: ({ patches, }: {
        patches: import("../PortableTextInput").PatchWithOrigin[];
        snapshot: import("@sanity/portable-text-editor").PortableTextBlock[];
    }) => void) => void;
    type: import("@sanity/portable-text-editor").Type;
    value: import("@sanity/portable-text-editor").PortableTextBlock[];
}> | typeof OtherInput;
//# sourceMappingURL=input.d.ts.map